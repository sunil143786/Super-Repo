from fuzzywuzzy import process
from imdb import IMDb
from info import REQ_CHANNEL, GRP_LNK
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from database.ia_filterdb import get_search_results, get_all_files

imdb = IMDb()

async def ai_spell_check(chat_id, wrong_name):
    try:  
        async def search_movie(wrong_name):
            search_results = imdb.search_movie(wrong_name)
            movie_list = [movie['title'] for movie in search_results]
            return movie_list

        movie_list = await search_movie(wrong_name)

        if not movie_list:
            return None

        for _ in range(5):
            closest_match = process.extractOne(wrong_name, movie_list)

            if not closest_match or closest_match[1] <= 80:
                return None

            movie = closest_match[0]
            files, offset, total_results = await get_search_results(chat_id=chat_id, query=movie)

            if files:
                return movie

            movie_list.remove(movie)

        return None

    except Exception as e:
        print(f"Error in ai_spell_check: {e}")
        return None


@Client.on_message((filters.command(["request", "Request"]) | filters.regex("#request") | filters.regex("#Request")))
async def requests(client, message):
    search = message.text
    requested_movie = search.replace("/request", "").replace("/Request", "").strip()
    user_id = message.from_user.id

    if not requested_movie:
        await message.reply_text("ЁЯЩЕ (рдлрд┐рд▓реНрдо рд░рд┐рдХреНрд╡реЗрд╕реНрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдлрд┐рд▓реНрдо рдХрд╛ рдирд╛рдо рдФрд░ рд╕рд╛рд▓ рд╕рд╛рде рдореЗрдВ рд▓рд┐рдЦреЗрдВ\nрдХреБрдЫ рдЗрд╕ рддрд░рд╣ ЁЯСЗ\n<code>/request Pushpa 2021</code>")
        return

    files, offset, total_results = await get_search_results(chat_id=message.chat.id, query=requested_movie)

    if files: 
        file_name = files[0]['file_name']
        await message.reply_text(f"ЁЯОе {file_name}\n\nрдЖрдкрдиреЗ рдЬреЛ рдореВрд╡реА рд░рд┐рдХреНрд╡реЗрд╕реНрдЯ рдХреА рд╣реИ рд╡реЛ рдЧреНрд░реБрдк рдореЗрдВ рдЙрдкрд▓рдмреНрдз рд╣реИрдВ\n\nрдЧреНрд░реБрдк рд▓рд┐рдВрдХ = {GRP_LNK}")
    else:
        closest_movie = await ai_spell_check(chat_id=message.chat.id, wrong_name=requested_movie)
        if closest_movie:
            files, offset, total_results = await get_search_results(chat_id=message.chat.id, query=closest_movie)
            if files:
                file_name = files[0]['file_name']
                await message.reply_text(f"ЁЯОе {file_name}\n\nрдЖрдкрдиреЗ рдЬреЛ рдореВрд╡реА рд░рд┐рдХреНрд╡реЗрд╕реНрдЯ рдХреА рд╣реИ рд╡реЛ рдЧреНрд░реБрдк рдореЗрдВ рдЙрдкрд▓рдмреНрдз рд╣реИрдВ\n\nрдЧреНрд░реБрдк рд▓рд┐рдВрдХ = {GRP_LNK}")
            else:
                await message.reply_text(f"тЬЕ рдЖрдкрдХреА рдлрд┐рд▓реНрдо <b>{closest_movie}</b> рд╣рдорд╛рд░реЗ рдПрдбрдорд┐рди рдХреЗ рдкрд╛рд╕ рднреЗрдЬ рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИ.\n\nЁЯЪА рдЬреИрд╕реЗ рд╣реА рдлрд┐рд▓реНрдо рдЕрдкрд▓реЛрдб рд╣реЛрддреА рд╣реИрдВ рд╣рдо рдЖрдкрдХреЛ рдореИрд╕реЗрдЬ рджреЗрдВрдЧреЗ.\n\nЁЯУМ рдзреНрдпрд╛рди рджреЗ - рдПрдбрдорд┐рди рдЕрдкрдиреЗ рдХрд╛рдо рдореЗрдВ рд╡реНрдпрд╕реНрдд рд╣реЛ рд╕рдХрддреЗ рд╣реИ рдЗрд╕рд▓рд┐рдП рдлрд┐рд▓реНрдо рдЕрдкрд▓реЛрдб рд╣реЛрдиреЗ рдореЗрдВ рдЯрд╛рдЗрдо рд▓рдЧ рд╕рдХрддрд╛ рд╣реИрдВ")
                await client.send_message(
                    REQ_CHANNEL,
                    f"ЁЯУЭ #REQUESTED_CONTENT ЁЯУЭ\n\n╩Щс┤Пс┤Ы - {temp.B_NAME}\n╔┤с┤Ас┤Нс┤З - {message.from_user.mention} (<code>{message.from_user.id}</code>)\nRс┤З╟лс┤Ьс┤ЗъЬ▒с┤Ы - <code>{closest_movie}</code>",
                    reply_markup=InlineKeyboardMarkup(
                        [[
                            InlineKeyboardButton('╔┤с┤Пс┤Ы ╩Ас┤З╩Яс┤Зс┤Аsс┤З ЁЯУЕ', callback_data=f"not_release:{user_id}:{requested_movie}"),
                            InlineKeyboardButton('╔┤с┤Пс┤Ы с┤Ас┤ас┤А╔к╩Яс┤А╩Щ╩Яс┤З ЁЯЩЕ', callback_data=f"not_available:{user_id}:{requested_movie}")
                        ],[
                            InlineKeyboardButton('с┤Ьс┤Ш╩Яс┤Пс┤Ас┤Ес┤Зс┤Е тЬЕ', callback_data=f"uploaded:{user_id}:{requested_movie}")
                        ],[
                            InlineKeyboardButton('╔к╔┤с┤ас┤А╩Я╔кс┤Е ╥Ус┤П╩Ас┤Нс┤Ас┤ЫЁЯЩЕ', callback_data=f"series:{user_id}:{requested_movie}"),
                            InlineKeyboardButton('sс┤З╩Я╩Я с┤Н╔кsс┤Ыс┤Зс┤ЛтЬНя╕П', callback_data=f"spelling_error:{user_id}:{requested_movie}")
                        ],[
                            InlineKeyboardButton('тжЙ с┤Д╩Яс┤Пsс┤З тжК', callback_data=f"close_data")]
                        ])
                )
        else:
            await message.reply_text(f"тЬЕ рдЖрдкрдХреА рдлрд┐рд▓реНрдо <b>{requested_movie}</b> рд╣рдорд╛рд░реЗ рдПрдбрдорд┐рди рдХреЗ рдкрд╛рд╕ рднреЗрдЬ рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИ.\n\nЁЯЪА рдЬреИрд╕реЗ рд╣реА рдлрд┐рд▓реНрдо рдЕрдкрд▓реЛрдб рд╣реЛрддреА рд╣реИрдВ рд╣рдо рдЖрдкрдХреЛ рдореИрд╕реЗрдЬ рджреЗрдВрдЧреЗ.\n\nЁЯУМ рдзреНрдпрд╛рди рджреЗ - рдПрдбрдорд┐рди рдЕрдкрдиреЗ рдХрд╛рдо рдореЗрдВ рд╡реНрдпрд╕реНрдд рд╣реЛ рд╕рдХрддреЗ рд╣реИ рдЗрд╕рд▓рд┐рдП рдлрд┐рд▓реНрдо рдЕрдкрд▓реЛрдб рд╣реЛрдиреЗ рдореЗрдВ рдЯрд╛рдЗрдо рд▓рдЧ рд╕рдХрддрд╛ рд╣реИрдВ")
            await client.send_message(
                REQ_CHANNEL,
                f"ЁЯУЭ #REQUESTED_CONTENT ЁЯУЭ\n\n╩Щс┤Пс┤Ы - {temp.B_NAME}\n╔┤с┤Ас┤Нс┤З - {message.from_user.mention} (<code>{message.from_user.id}</code>)\nRс┤З╟лс┤Ьс┤ЗъЬ▒с┤Ы - <code>{requested_movie}</code>",
                reply_markup=InlineKeyboardMarkup(
                    [[
                        InlineKeyboardButton('╔┤с┤Пс┤Ы ╩Ас┤З╩Яс┤Зс┤Аsс┤З ЁЯУЕ', callback_data=f"not_release:{user_id}:{requested_movie}"),
                        InlineKeyboardButton('╔┤с┤Пс┤Ы с┤Ас┤ас┤А╔к╩Яс┤А╩Щ╩Яс┤З ЁЯЩЕ', callback_data=f"not_available:{user_id}:{requested_movie}")
                    ],[
                        InlineKeyboardButton('с┤Ьс┤Ш╩Яс┤Пс┤Ас┤Ес┤Зс┤Е тЬЕ', callback_data=f"uploaded:{user_id}:{requested_movie}")
                    ],[
                        InlineKeyboardButton('╔к╔┤с┤ас┤А╩Я╔кс┤Е ╥Ус┤П╩Ас┤Нс┤Ас┤ЫЁЯЩЕ', callback_data=f"series:{user_id}:{requested_movie}"),
                        InlineKeyboardButton('sс┤З╩Я╩Я с┤Н╔кsс┤Ыс┤Зс┤ЛтЬНя╕П', callback_data=f"spelling_error:{user_id}:{requested_movie}")
                    ],[
                        InlineKeyboardButton('тжЙ с┤Д╩Яс┤Пsс┤З тжК', callback_data=f"close_data")]
                    ])
            )
